#!/bin/bash
# shellcheck disable=SC2068
# shellcheck disable=SC2164
# shellcheck disable=SC2002
# shellcheck disable=SC2045
# shellcheck disable=SC2115
rpms_path=$1
clear_cli=$1
remote_branch=$2
current_path=$(
  cd "$(dirname "$0")"
  pwd
)

function check() {
  if [[ ! -d ${rpms_path} ]]; then
    echo "[ERROR] ${rpms_path} is not exist"
    exit 1
  fi

  if [[ -z ${remote_branch} ]]; then
    echo "[ERROR] The remote branch is not specified"
    exit 1
  fi
}

function install_git() {
  git_status=$(dpkg -s git 2>&1)
  if [[ ${git_status} =~ "is not installed" ]]; then
    apt install git -y
    git_status=$(dpkg -s git 2>&1)
    if [[ ${git_status} =~ "is not installed" ]]; then
      echo "[ERROR] Git install failed"
      exit 1
    fi
  fi
}

function run() {
  check

  result_file=${rpms_path}/result.log
  if [[ -f ${result_file} ]]; then
    echo "" >"${result_file}"
  fi

  rpm_cve_path=$(ls "${rpms_path}")
  IFS=$'\n'
  for rpm_cve in ${rpm_cve_path[@]}; do
    if [[ -d ${rpms_path}/${rpm_cve} ]]; then
      rpm_name=$(echo "${rpm_cve}" | awk -F '-CVE' '{print $1}')
      patches=$(find "${rpms_path}/${rpm_cve}" -name "*.patch" | sort)
      if [[ -z ${patches} ]]; then
        echo "[WARRING] ${rpm_name} not found patch" | tee -a "${result_file}"
        echo "============================================================="
      else
        install_git
        patch_ids=""
        new_patches=""
        for patch in ${patches[@]}; do
          git_patch_ids=$(cat "${patch}" | git patch-id --stable)
          if [[ ! ${patch_ids} =~ ${git_patch_ids} ]]; then
            new_patches="${new_patches} ${patch}"
            patch_ids="${patch_ids} ${git_patch_ids}"
          fi
        done
        IFS=$' \t\n'
        for branch in ${remote_branch[@]}; do
          /bin/bash "${current_path}"/add_patch.sh "${rpm_name}" "${branch}" "${new_patches}"
          add_patch_result=$?
          if [[ ${add_patch_result} -eq 0 ]]; then
            echo "[INFO] ${rpm_name} of ${branch} apply patch ${new_patches} successfully" | tee -a "${result_file}"
          else
            echo "[ERROR] ${rpm_name} of ${branch} failed to apply patch ${new_patches}" | tee -a "${result_file}"
          fi
        done
      fi
    fi
    echo "============================================================="
    IFS=$'\n'
  done
}

function clear_env() {
  echo "[INFO] clear env"
  rm -rf /tmp/cve_tracking/download_source
  build_root=$(
    cd ~
    pwd -P
  )
  rpmbuild_path=${build_root}/"rpmbuild"

  if [[ -d ${rpmbuild_path} ]]; then
    for dir in $(ls ${rpmbuild_path}); do
      rm -rf ${rpmbuild_path}/${dir}/*
    done
  fi
}

if [[ ${clear_cli} == "clear" ]]; then
  clear_env
else
  run
fi
