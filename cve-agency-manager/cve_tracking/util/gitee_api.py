#!/usr/bin/python3
# ******************************************************************************
# Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
# licensed under the Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#     http://license.coscl.org.cn/MulanPSL2
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR
# PURPOSE.
# See the Mulan PSL v2 for more details.
# ******************************************************************************/
"""
This is a helper script for working with gitee.com
"""
import os

from conf import CONFIG
from exception import ConfigNotFoundError
from logger import logger
from . import Api


class Gitee(Api):
    """
    Gitee is a helper class to abstract gitee.com api
    """
    token = os.getenv("TRACK_GITEE_TOKEN", CONFIG.GITEE_TOKEN)
    time_format = "%Y-%m-%dT%H:%M:%S%z"

    def __init__(self):
        if not self.token:
            raise ConfigNotFoundError(
                "Please set the 'TRACK_GITEE_TOKEN' environment variables of gitee.")
        self.src_openeuler_url = "https://gitee.com/src-openeuler/{repo}/raw/{br}/"
        self.advisor_url = "https://gitee.com/openeuler/openEuler-Advisor/raw/master/"
        super(Gitee, self).__init__()

    def _set_token(self):
        parameters = {"access_token": self.token}
        return parameters

    async def _post_issue(self, title, body):
        """
        Post new issue
        """
        issues_url = f"https://gitee.com/api/v5/repos/{self._owner}/issues"
        parameters = self._set_token()
        parameters["repo"] = self._repo
        parameters["title"] = title
        parameters["body"] = body
        return await self._post(issues_url, parameters)

    async def create_issue(
            self,
            version="",
            branch="master",
            title=None,
            body=None,
    ):
        """
        Create issue in gitee
        """
        title = title or f"Upgrade {self._repo} to {version} in {branch}"
        body = (
                body
                or """This issue is automatically created by openEuler-Advisor.
               Please check the correspond PR is accepted before close it.
               Thanks.
               Yours openEuler-Advisor."""
        )
        return await self._post_issue(title, body)

    async def create_issue_comment(self, number, body):
        """
        create issue comment
        """
        url = (
            f"https://gitee.com/api/v5/repos/{self._owner}/{self._repo}/issues/{number}/comments"
        )
        values = self._set_token()
        values["body"] = body
        logger.info(f'Add comment to issue url: {url}')
        return await self._post(url, values)

    async def create_pr_comment(self, number, body):
        """
        Post comment to the given specific PR
        """
        url = (
            f"https://gitee.com/api/v5/repos/{self._owner}/{self._repo}/pulls/{number}/comments"
        )
        values = self._set_token()
        values["body"] = body
        return self._post(url, values)
