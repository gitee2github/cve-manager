# -*- coding: UTF-8 -*-
import os
import xlwt
from dbConnecttion.MysqlConn import Mysql
class MysqlToExcel(object):
    def __init__(self):
        self.file_name= './problemexcels/data.xls'
    def get_results(self):
        mysql=Mysql()
        sql="select * from cve_origin_excel where cve_status = 3 or cve_status=4 or cve_status=5 or cve_status=Null"
        results=mysql.getMany(sql)
        print(results)

        mysql.dispose()
        mysql.close()
        return results

    def generate_table(self):
        #生成excel表格
        #文件已存在则删除
        if os.path.exists(self.file_name):
            os.remove(self.file_name)
        results=self.get_results()
        if not results:
            print("查询结果为空")
            return False
        #创建excel对象
        f=xlwt.Workbook()
        sheet1=f.add_sheet('sheet1',cell_overwrite_ok=True)
        #列字段
        column_names=['cve_id','cve_num','cve_url','cve_version','pack_name','score_type','nvd_score','cve_level','cve_desc',
                      'repair_time','vector_value','attack_vector','access_vector','attack_complexity','access_complexity',
                      'privilege_required','user_interaction','scope','confidentiality','integrity','availability',
                      'authentication','cve_status','create_time','update_time','delete_time']
        #写第一行,列名
        for i in range(0,len(column_names)):
            sheet1.write(0,i,column_names[i])
        #写多行
        num=0
        for i in results:
            for key in i:
                if type(i[key])==bytes:
                    i[key]=i[key].decode("utf-8")

            sheet1.write(num + 1, 0, i["cve_id"])
            sheet1.write(num + 1, 1, i["cve_num"])
            sheet1.write(num + 1, 2, i["cve_url"])
            sheet1.write(num + 1, 3, i["cve_version"])
            sheet1.write(num + 1, 4, i["pack_name"])
            sheet1.write(num + 1, 5, i["score_type"])
            sheet1.write(num + 1, 6, i["nvd_score"])
            sheet1.write(num + 1, 7, i["cve_level"])
            sheet1.write(num + 1, 8, i["cve_desc"])
            sheet1.write(num + 1, 9, i["repair_time"])
            sheet1.write(num + 1, 10, i["vector_value"])
            sheet1.write(num + 1, 11, i["attack_vector"])
            sheet1.write(num + 1, 12, i["access_vector"])
            sheet1.write(num + 1, 13, i["attack_complexity"])
            sheet1.write(num + 1, 14, i["access_complexity"])
            sheet1.write(num + 1, 15, i["privilege_required"])
            sheet1.write(num + 1, 16, i["user_interaction"])
            sheet1.write(num + 1, 17, i["scope"])
            sheet1.write(num + 1, 18, i["confidentiality"])
            sheet1.write(num + 1, 19, i["integrity"])
            sheet1.write(num + 1, 20, i["availability"])
            sheet1.write(num + 1, 21, i["authentication"])
            sheet1.write(num + 1, 22, i["cve_status"])
            if i['create_time']!=None:
                sheet1.write(num + 1, 23, i["create_time"].strftime('%Y-%m-%d %H:%M:%S'))
            else:
                sheet1.write(num + 1, 23, i['create_time'])
            if i["update_time"]!=None:
                sheet1.write(num + 1, 24, i["update_time"].strftime('%Y-%m-%d %H:%M:%S'))
            else:
                sheet1.write(num + 1, 24, i["update_time"])
            if i["delete_time"] != None:
                sheet1.write(num + 1, 25, i["delete_time"].strftime('%Y-%m-%d %H:%M:%S'))
            else:
                sheet1.write(num + 1, 25, i["delete_time"])
            num+=1
        #保存文件
        f.save(self.file_name)
        #判断文件是否存在
        if not os.path.exists(self.file_name):
            print("生成excel失败")
        else:
            print("生成excel成功")
    #修改状态为3,4的为5表示已保存在excel中
    def update_status(self):
        mysql=Mysql()
        sql="update cve_origin_excel set cve_status=5 where cve_status=3 or cve_status=4"
        mysql.update(sql)
        mysql.dispose()
