package task

import (
	"cvevulner/common"
	"cvevulner/taskhandler"
	"errors"
	"github.com/astaxie/beego/config"
	"github.com/astaxie/beego/logs"
)

func ParamsCveOriginData()  error{
	defer common.Catchs()
	// 查询需要处理的cve, 1:新增；2：修改
	BConfig, err := config.NewConfig("ini", "conf/app.conf")
	if err != nil{
		logs.Error("config init error:", err)
		return err
	}
	// 单次处理的数据量
	prcnum, err := BConfig.Int("crontab::prcnum")
	if err != nil {
		logs.Error("config crontab::prcnum error: invalid value is ",prcnum)
		return errors.New("value is nil")
	}
	// 处理多少天到现在的数据
	days, ok := BConfig.Int("crontab::days")
	if ok != nil {
		logs.Error("config crontab::days error:", err)
		return ok
	}
	// openeuler 编号开始值
	cveRef := BConfig.String("cve::cveref")
	openeulernum, ok := BConfig.Int("cve::openeulernum")
	if ok != nil {
		logs.Error("config cve::openeulernum error:", err)
		return ok
	}
	// 获取表的数据源
	_, errx := taskhandler.GetCveOriginData(prcnum, days, openeulernum, cveRef)
	return errx
}
