#!/usr/bin/python
# -*- coding: UTF-8 -*-

################################################################################
#
# Copyright (c) 2020 openEuler.org, Inc. All Rights Reserved
#
################################################################################
"""
Interaction between file and mysql data

Authors: xiaojianghui
Date:    10/22/2020 11:01 AM
"""

import xlrd
import os
import time
import shutil
from dbConnecttion import MysqlConn


def parseExcel(filename):
    """
        parase excel
    :param filename: excel file
    :return packName, cpe_packName: string, string
    """
    packName = []
    cpe_packName = []
    try:
        data = xlrd.open_workbook("./mappingexcels/" + filename)
        table_one = data.sheet_by_name("映射关系")
        row_number = table_one.nrows
        for i in range(1, row_number):
            packNameOne = table_one.cell(i, 0).value
            packName.append(packNameOne)
            cpePackNameOne = table_one.cell(i, 1).value
            cpe_packName.append(cpePackNameOne)
    except IndexError as e:
        print("下标越界", e)
    except xlrd.XLRDError as e:
        print("未找到映射关系table", e)
    return packName, cpe_packName


def toMysql():
    """
        Data stored in the database
    """
    files = os.listdir("./mappingexcels")
    if not files:
        print("无文件，请上传excel文件")
        return False
    mysql = MysqlConn.Mysql()
    for filename in files:
        packNameList = parseExcel(filename)[0]
        cpe_packNameList = parseExcel(filename)[1]
        if packNameList and cpe_packNameList:
            for j in range(0, len(packNameList)):
                createTime = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
                # Query whether data exists in the database, update the data if it exists and is different
                sql = "select * from cve_package_cpe where packname = %s"
                val = (packNameList[j],)
                result = mysql.getOne(sql, val)
                if result:
                    # If the query is not empty, execute the next judgment, if it is empty, insert the data
                    if str(result['packname'], encoding="utf-8") == packNameList[j]:
                        if str(result["cpe_packname"], encoding="utf-8") != cpe_packNameList[j]:
                            print("更新数据")
                            sql = "update cve_package_cpe set cpe_packname=%s,createtime=%s where packname=%s"
                            val = (cpe_packNameList[j], createTime, packNameList[j])
                            mysql.update(sql, val)
                            mysql.dispose()
                        else:
                            print("数据库为最新数据")
                else:
                    print("插入数据")
                    sql = "insert into cve_package_cpe (packname,cpe_packname,create_time) values (%s,%s,%s)"
                    val = (packNameList[j], cpe_packNameList[j], createTime)
                    mysql.insertOne(sql, val)
                    mysql.dispose()
        f_src = os.path.join("./mappingexcels/" + filename)
        f_dst = os.path.join("./oldexcels/" + filename)
        shutil.move(f_src, f_dst)
    mysql.close()
