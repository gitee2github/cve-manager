package models

import (
	"github.com/astaxie/beego/logs"
	"time"
)

//Time2Str format time to string
func Time2Str() string {
	const shortForm = "2006-01-02 15:04:05"
	t := time.Now()
	str := t.Format(shortForm)
	return str
}

//CheckToken Check whether the token is legal
func CheckToken(token string) bool {
	var ou OtherUser
	err := GetUserByToken(token, &ou)
	if err != nil {
		logs.Error("token: ", token, ", 错误")
		return false
	}
	now := Time2Str()
	logs.Info("token: now: ", now, ",expir: ", ou.ExpirationTime)
	if now > ou.ExpirationTime {
		return false
	}
	return true
}

func openEulerScoreProc(openEulerScore float64) (CveLevel string){
	if openEulerScore >= 9.0 {
		CveLevel = "Critical"
	} else if openEulerScore >= 7.0 && openEulerScore <= 8.9 {
		CveLevel = "High"
	} else if openEulerScore > 4.0 && openEulerScore <= 6.9 {
		CveLevel = "Medium"
	} else if openEulerScore <= 4.0 {
		CveLevel = "Low"
	}
	return CveLevel
}
