# -*- coding: UTF-8 -*-
#读取excel表格内容
import xlrd
import os
import shutil


#读取excel
#CVE评分
from xlrd import XLRDError


# def crawlScore():
#     score=[]
#     try:
#         data = xlrd.open_workbook("./newexcels/a-l.rar.1599118583853.xlsx")
#         table_one = data.sheet_by_name("漏洞报告")  # 根据表名查找漏洞报告信息表
#         row_number = table_one.nrows  # 获取所有数据的最大行数
#         for i in range(1, row_number):
#             scoreOne =str(table_one.cell(i, 5).value)
#             score.append(scoreOne)
#     except IndexError as e:
#         print("下标越界",e)
#     except XLRDError as e:
#         print("未找到漏洞报告table",e)
#     except Exception as e:
#         print("其他异常:",e)
#     return score
#CVE地址

def crawlUrls(fileName):
    urls=[]
    try:
        data=xlrd.open_workbook("./newexcels/"+fileName)
        table_one=data.sheet_by_name("漏洞报告")  #根据名称查找漏洞报告信息表
        row_number=table_one.nrows #获取所有数据的最大行数
        for i in range(1,row_number):
            url="https://nvd.nist.gov/vuln/detail/"+str(table_one.cell(i,2).value)
            urls.append(url)
    except IndexError as e:
        print("下标越界", e)
    except XLRDError as e:
        print("未找到漏洞报告table",e)
    except Exception as e:
        print("其他异常:", e)
    return urls
#CVE编号
def crawlCveNum(fileName):
    cveNum=[]
    try:
        data=xlrd.open_workbook("./newexcels/"+fileName)
        table_one=data.sheet_by_name("漏洞报告") #根据名称查找漏洞报告信息表
        row_number=table_one.nrows #获取所有数据的最大行数
        for i in range(1,row_number):
            cveNumOne=str(table_one.cell(i,2).value)
            cveNum.append(cveNumOne)
    except IndexError as e:
        print("下标越界", e)
    except XLRDError as e:
        print("未找到漏洞报告table",e)
    except Exception as e:
        print("其他异常:", e)
    return cveNum
#CVE版本
def crawlCveVersion(fileName):
    cveVersion=[]
    try:
        data=xlrd.open_workbook("./newexcels/"+fileName)
        table_one=data.sheet_by_name("漏洞报告")
        row_number=table_one.nrows
        for i in range(1,row_number):
            cveVersionOne=table_one.cell(i,1).value
            cveVersion.append(cveVersionOne)
    except IndexError as e:
        print("下标越界",e)
    except XLRDError as e:
        print("未找到漏洞报告table", e)
    except Exception as e:
        print("其他异常:", e)
    return cveVersion
#CVE类型
def crawlScopeType(fileName):
    scopeType=[]
    try:
        data=xlrd.open_workbook("./newexcels/"+fileName)
        table_one=data.sheet_by_name("漏洞报告")
        row_number=table_one.nrows
        for i in range(1,row_number):
            scopeTypeOne = 'v' + str(table_one.cell(i, 4).value)
            scopeType.append(scopeTypeOne)
    except IndexError as e:
        print("下标越界",e)
    except XLRDError as e:
        print("未找到漏洞报告table",e)
    except Exception as e:
        print("error:",e)
    return scopeType
#Component
def crawlPackName(fileName):
    packName = []
    try:
        data = xlrd.open_workbook("./newexcels/"+fileName)
        table_one = data.sheet_by_name("漏洞报告")
        row_number = table_one.nrows  # 获取所有数据的最大行数
        for i in range(1, row_number):
            packNameOne = table_one.cell(i, 0).value
            packName.append(packNameOne)
    except IndexError as e:
        print("下标越界",e)
    except XLRDError as e:
        print("未找到漏洞报告table",e)
    except Exception as e:
        print("error:",e)
    return packName


#excel解析完成后调用函数移动到oldexcels文件夹备份
def move_file(fileName):
    try:
        f_src=os.path.join("./newexcels/"+fileName)
        f_dst=os.path.join("./oldexcels/"+fileName)
        shutil.move(f_src,f_dst)
    except Exception as e:
        print("move error",e)
