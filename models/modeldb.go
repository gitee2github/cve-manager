package models

import (
	"github.com/astaxie/beego"
	"github.com/astaxie/beego/config"
	"github.com/astaxie/beego/logs"
	"github.com/astaxie/beego/orm"
	"time"
)

type IpWhite struct {
	IPId        int    `orm:"pk;auto;column(ip_id)"` // 自增的值
	MachineName string `orm:"size(128);column(machine_name)" description:"机器名称"`
	MachineIp   string `orm:"size(128);column(machine_ip);index" description:"机器ip"`
	AccessCount int64  `orm:"default(0);column(access_count)" description:"0: 不受限制; 10000:可以连续访问次数"`
}

type OtherUser struct {
	UerId          int       `orm:"pk;auto;column(user_id)"` // 自增的值
	UserName       string    `orm:"size(64);column(user_name)"`
	PassWord       string    `orm:"size(256);column(pass_word)"`
	AesKey         string    `orm:"size(512);colnum(aes_key)"`
	ExpirationTime string    `orm:"size(32);column(expiration_time)" description:"token的过期时间"`
	CreateTime     time.Time `orm:"auto_now;type(datetime);column(create_time)"`
	UpdateTime     time.Time `orm:"auto_now;type(datetime);column(update_time)"`
	DeleteTime     time.Time `orm:"auto_now;type(datetime);column(delete_time)"`
}

type AdminUser struct {
	UerId      int       `orm:"pk;auto;column(user_id)"` // 自增的值
	UserName   string    `orm:"size(64);column(user_name)"`
	PassWord   string    `orm:"size(256);column(pass_word)"`
	CreateTime time.Time `orm:"auto_now;type(datetime);column(create_time)"`
}

type VulnCenter struct {
	CveId       int64     `orm:"pk;auto;column(cve_id)"`
	CveNum      string    `orm:"size(256);column(cve_num);index" description:"cve编号"`
	Description string    `orm:"size(8192);column(cve_desc)" description:"cve描述"`
	CveLevel    string    `orm:"size(32);column(cve_level)" description:"致命(Critical);严重(High);中等(Medium);一般(Low);其他"`
	Status      int8      `orm:"default(0);column(cve_status)" description:"0:cve新增;1:数据已变化；2：已创建issue"`
	CveVersion  string    `orm:"size(128);column(cve_version)" description:"cve归属版本"`
	RepairTime  string    `orm:"size(32);column(repair_time)" description:"cve修复时间"`
	PackName    string    `orm:"size(512);column(pack_name)" description:"cve对应得包名称"`
	CveUrl      string    `orm:"size(2048);column(cve_url)" description:"cve下载链接"`
	IsExport    int8      `orm:"default(0);column(is_export)" description:"0:数据初始化;1:数据已同步到官网；2：数据不需要同步到官网；3：issue已关闭需要同步到官网"`
	CreateTime  time.Time `orm:"auto_now_add;type(datetime);column(create_time)"`
	UpdateTime  time.Time `orm:"auto_now;type(datetime);column(update_time)"`
	DeleteTime  time.Time `orm:"auto_now;type(datetime);column(delete_time)"`
}

type OpenEulerSA struct {
	OpenId         int64  `orm:"pk;auto;column(openeuler_id)"`
	CveId          int64  `orm:"index;column(cve_id)"`
	PublicDate     string `orm:"size(16);column(public_date);null" description:"安全公告时间"`
	OpenEulerSANum string `orm:"size(128);column(openeuler_sa_num);unique" description:"安全公告"`
}

type ScoreRecord struct {
	Id          int64     `orm:"pk;auto"`
	CveId       int64     `orm:"index;column(cve_id)"`
	NVDScore    float64   `orm:"digits(10);decimals(1);column(nvd_score)"`
	NvectorVule string    `orm:"size(256);column(n_vector_value)" description:"nvd vector 原始值"`
	Status      int8      `orm:"default(0);column(status)" description:"0:未处理;1:已处理"`
	CreateTime  time.Time `orm:"auto_now_add;type(datetime);column(create_time)"`
}

type Score struct {
	Id                 int64     `orm:"pk;auto"`
	CveId              int64     `orm:"index;column(cve_id)"`
	CveNum             string    `orm:"size(256);column(cve_num)" description:"cve编号"`
	NVDScore           float64   `orm:"digits(10);decimals(1);column(nvd_score)" description:"nvd 评分"`
	OpenEulerScore     float64   `orm:"digits(10);decimals(1);column(openeuler_score)" description:"openeuler评分"`
	NvectorVule        string    `orm:"size(256);column(n_vector_value)" description:"nvd vector 原始值"`
	OvectorVule        string    `orm:"size(256);column(o_vector_value)" description:"openeuler vector 原始值"`
	NattackVector      string    `orm:"size(64);column(n_attack_vector)"`
	NaccessVector      string    `orm:"size(256);column(n_access_vector);null" description:"nvd 2.0 评分向量"`
	OattackVector      string    `orm:"size(64);column(o_attack_vector)"`
	OaccessVector      string    `orm:"size(256);column(o_access_vector);null" description:"nvd 2.0 评分向量"`
	NattackComplexity  string    `orm:"size(64);column(n_attack_complexity)"`
	NaccessComplexity  string    `orm:"size(64);column(n_access_complexity);null"`
	OattackComplexity  string    `orm:"size(64);column(o_attack_complexity)"`
	OaccessComplexity  string    `orm:"size(64);column(o_access_complexity);null"`
	NprivilegeRequired string    `orm:"size(64);column(n_privilege_required)"`
	OprivilegeRequired string    `orm:"size(64);column(o_privilege_required)"`
	NuserInteraction   string    `orm:"size(64);column(n_user_interaction)"`
	OuserInteraction   string    `orm:"size(64);column(o_user_interaction)"`
	Nscope             string    `orm:"size(64);column(n_scope)"`
	Oscope             string    `orm:"size(64);column(o_scope)"`
	Nconfidentiality   string    `orm:"size(64);column(n_confidentiality)"`
	Oconfidentiality   string    `orm:"size(64);column(o_confidentiality)"`
	Nintegrity         string    `orm:"size(64);column(n_integrity)"`
	Ointegrity         string    `orm:"size(64);column(o_integrity)"`
	Navailability      string    `orm:"size(64);column(n_availability)"`
	Oavailability      string    `orm:"size(64);column(o_availability)"`
	Nauthentication    string    `orm:"size(64);column(n_authentication);null"`
	Oauthentication    string    `orm:"size(64);column(o_authentication);null"`
	ScoreType          string    `orm:"size(16);column(score_type)"`
	OpenId             int64     `orm:"unique;column(openeuler_id);null"`
	Nstatus            int8      `orm:"default(0);column(n_score_status)" description:"0:新增评分，无改变；1:修改nvd评分;2:已提交issue；3:已处理"`
	Ostatus            int8      `orm:"default(0);column(o_score_status)" description:"0:新增评分，无改变；1:修改nvd评分；2：修改评分未通过；3：修改评分已通过"`
	CreateTime         time.Time `orm:"auto_now_add;type(datetime);column(create_time)"`
	UpdateTime         time.Time `orm:"auto_now;type(datetime);column(update_time)"`
	DeleteTime         time.Time `orm:"auto_now;type(datetime);column(delete_time)"`
}

type SecurityNotice struct {
	SecId              int64     `orm:"pk;auto;column(sec_id)" description:"安全公告"`
	CveId              int64     `orm:"index;column(cve_id)"`
	CveNum             string    `orm:"size(256);column(cve_num)" description:"cve编号"`
	OpenId             int64     `orm:"unique;column(openeuler_id);null" description:"OpenEulerSA"`
	Introduction       string    `orm:"size(256);null;column(introduction)" description:"简介"`
	Summary            string    `orm:"size(256);null;column(summary)" description:"概要"`
	Theme              string    `orm:"size(2048);null;column(theme)" description:"主题"`
	Description        string    `orm:"size(8192);column(description)" description:"安全公告描述"`
	InfluenceComponent string    `orm:"size(256);null;column(influence_component)" description:"影响组件"`
	AffectProduct      string    `orm:"size(256);null;column(affect_product)" description:"影响产品"`
	ReferenceLink      string    `orm:"size(1024);null;column(reference_link)" description:"参考链接"`
	Status             int8      `orm:"default(0);column(sec_status)" description:"0:未发布；1:已发布"`
	AffectStatus       string    `orm:"size(16);null;column(affect_status)" description:"Fixed:已解决；UnFixed:未解决；UnAffected:不影响"`
	CreateTime         time.Time `orm:"auto_now_add;type(datetime);column(create_time)"`
	UpdateTime         time.Time `orm:"auto_now;type(datetime);column(update_time)"`
	DeleteTime         time.Time `orm:"auto_now;type(datetime);column(delete_time)"`
}

type Package struct {
	Id       int64  `orm:"pk;auto"`
	SecId    int64  `orm:"index;column(sec_id)"`
	PackName string `orm:"size(1024);null;column(pack_name)" description:"包名"`
	PackUrl  string `orm:"size(2048);null;column(pack_url)" description:"包下载链接"`
}

type IssueTemplate struct {
	TemplateId        int64     `orm:"pk;auto;column(template_id)"`
	CveId             int64     `orm:"index;column(cve_id)"`
	CveNum            string    `orm:"size(256);column(cve_num)" description:"cve编号"`
	OwnedComponent    string    `orm:"size(256);column(owned_component)" description:"漏洞归属组件"`
	OwnedVersion      string    `orm:"size(256);column(owned_version)" description:"漏洞归属版本"`
	NVDScore          float64   `orm:"digits(10);decimals(1);column(nvd_score)" description:"nvd评分"`
	OpenEulerScore    float64   `orm:"digits(10);decimals(1);column(openeuler_score)" description:"openeuler评分"`
	NVDVector         string    `orm:"size(256);column(nvd_vector)" description:"nvd评分向量"`
	OpenEulerVector   string    `orm:"size(256);column(openeuler_vector)" description:"openeuler评分向量"`
	CveBrief          string    `orm:"size(4096);column(cve_brief)" description:"漏洞简述"`
	CveAnalysis       string    `orm:"size(4096);column(cve_analysis)" description:"影响性分析说明"`
	PrincipleAnalysis string    `orm:"size(4096);column(principle_analysis)" description:"原理分析"`
	AffectedVersion   string    `orm:"size(256);column(affected_version)" description:"受影响的版本"`
	Solution          string    `orm:"size(1024);column(solution)" description:"规避方案或消减措施"`
	IssueId           int64     `orm:"column(issue_id)" description:"issue的id"`
	IssueNum          string    `orm:"size(64);column(issue_num);index" description:"issue编号"`
	Assignee          string    `orm:"size(128);column(issue_assignee)" description:"issue所属责任人"`
	Status            int8      `orm:"default(0);column(status)" description:"1:待办的；2：进行中；3：已完成；4：已拒绝"`
	StatusName        string    `orm:"size(128);column(status_name)" description:"issue状态名称"`
	IssueStatus       int8      `orm:"default(0);column(issue_status)" description:"1:待分析；2：已正常关闭；3已分析，待修复；4：已修复；5：已发布；6：已异常关闭"`
	IssueLabel        string    `orm:"size(256);column(issue_label)" description:"issue标签, cve/Undisclosed, cve/Disclosed"`
	Owner             string    `orm:"size(128);column(owner)" description:"仓库地址"`
	Repo              string    `orm:"size(128);column(repo)" description:"仓库路径"`
	Title             string    `orm:"size(512);column(title)" description:"issue标题"`
	IssueType         string    `orm:"size(64);column(issue_type)" description:"CVE和安全问题"`
	Collaborators     string    `orm:"size(128);column(collaborators);null" description:"协助者"`
	Milestone         string    `orm:"size(64);column(milestone);null" description:"里程碑序号"`
	Program           string    `orm:"size(64);column(program);null" description:"项目编号"`
	SecurityHole      int8      `orm:"default(0);column(security_hole)" description:"是否是私有issue"`
	CveLevel          string    `orm:"size(32);column(cve_level)" description:"致命(Critical);严重(High);中等(Medium);一般(Low);其他"`
	CommentId         int64     `orm:"column(comment_id), null" description:"首条评论id"`
	CreateTime        time.Time `orm:"auto_now_add;type(datetime);column(create_time)"`
	UpdateTime        time.Time `orm:"auto_now;type(datetime);column(update_time)"`
	DeleteTime        time.Time `orm:"auto_now;type(datetime);column(delete_time)"`
}

type IssueHooks struct {
	Id                int64  `orm:"pk;auto"`
	CveId             int64  `orm:"index;column(cve_id)"`
	IssueId           int64  `orm:"column(issue_id)" description:"issue的id"`
	IssueNum          string `orm:"size(64);column(issue_num);index" description:"issue编号"`
	HookId            int64  `orm:"column(hook_id)" decrtiption:"钩子id"`
	Owner             string `orm:"size(128);column(owner)" description:"仓库地址"`
	Repo              string `orm:"size(128);column(repo)" description:"仓库路径"`
	HookUrl           string `orm:"size(512);column(hook_url)" description:"回调地址"`
	PushEvent         int8   `orm:"column(push_event);default(1)" description:"Push代码到仓库; 默认1：已监听; 0: 未监听"`
	TagPushEvent      int8   `orm:"column(tag_push_events);default(1)" description:"提交Tag到仓库, 默认1：已监听; 0: 未监听"`
	IssueEvent        int8   `orm:"column(issues_events);default(1)" description:"创建/关闭Issue, 默认1：已监听; 0: 未监听"`
	NoteEvent         int8   `orm:"column(note_events);default(1)" description:"评论了Issue/代码等等, 默认1：已监听; 0: 未监听"`
	MergeRequestEvent int8   `orm:"column(merge_requests_events);default(1)" description:"合并请求和合并后, 默认1：已监听; 0: 未监听"`
	Status            int8   `orm:"default(1);column(status)" description:"1:有效; 2:无效"`
	CreateTime        string `orm:"size(32);column(create_time)"`
	UpdateTime        string `orm:"size(32);column(update_time);null"`
	DeleteTime        string `orm:"size(32);column(delete_time);null"`
}

type GitPackageTable struct {
	TableId   int64  `orm:"pk;auto;column(table_id)"`
	TableName string `orm:"size(128);column(table_name)" description:"数据库pkginfo下的表名，如：mainline, bringInRely"`
	Brands    string `orm:"size(256);column(brands)" description:"对应分支信息"`
}

type GitOpenEuler struct {
	GitId             int64     `orm:"pk;auto;column(git_id)"`
	PackageId         int64     `orm:"index;column(package_id)" description:"获取到的包id"`
	PackageName       string    `orm:"column(package_name);size(256)" description:"包名称"`
	Version           string    `orm:"size(64);column(version);index" description:"版本号"`
	Release           string    `orm:"size(128);column(release)" description:"release 版本号"`
	OriginUrl         string    `orm:"size(512);column(origin_url)" description:"gitee上的地址"`
	License           string    `orm:"size(4096);column(license)" description:"license"`
	Feature           string    `orm:"size(128);column(feature)" description:"特性"`
	MainTainer        string    `orm:"size(128);column(main_tainer)" description:"维护人"`
	MainTainLevel     int8      `orm:"column(main_tain_level);default(1)" description:"软件包维护级别"`
	ReleaseTime       string    `orm:"size(32);column(release_time)" description:"当前版本发布时间"`
	UsedTime          string    `orm:"size(32);column(used_time)" description:"当天减去所用版本的发布日期"`
	LatestVersion     string    `orm:"size(128);column(latest_version)" description:"最新版本号"`
	LatestVersionTime string    `orm:"size(32);column(latest_version_time)" description:"最新版本发布时间"`
	IssueCount        int64     `orm:"column(issue_count);default(0)" description:"该软件包仓库下的issue总数"`
	TableId           int64     `orm:"index;column(table_id)" description:"表id，外键"`
	TableName         string    `orm:"size(128);column(table_name)" description:"数据库pkginfo下的表名，如：mainline, bringInRely"`
	Status            int8      `orm:"default(0);column(status)" description:"0: 代表新数据; 1:已推送; 2:代表已废弃"`
	CreateTime        time.Time `orm:"auto_now_add;type(datetime);column(create_time)"`
	UpdateTime        time.Time `orm:"auto_now;type(datetime);column(update_time)"`
	DeleteTime        time.Time `orm:"auto_now;type(datetime);column(delete_time)"`
}

type GitOpenEulerTableRelate struct {
	RelateId  int64  `orm:"pk;auto;column(relate_id)"`
	GitId     int64  `orm:"index;column(git_id)" description:"GitOpenEuler，外键"`
	Brands    string `orm:"size(256);column(brands)" description:"对应分支信息"`
	TableName string `orm:"size(256);column(table_name)" description:"数据库pkginfo下的表名，如：mainline, bringInRely"`
}

type GitPackageInfo struct {
	DetailId      int64     `orm:"pk;auto;column(detail_id)"`
	GitId         int64     `orm:"index;column(git_id)" description:"包id，外键"`
	Ids           int64     `orm:"index;column(git_ids)" description:"原始数据id来源"`
	PackageName   string    `orm:"column(package_name);size(256)" description:"包名称"`
	Version       string    `orm:"size(64);column(version);index" description:"版本号"`
	Release       string    `orm:"size(128);column(release)" description:"release 版本号"`
	OriginUrl     string    `orm:"size(512);column(origin_url)" description:"上游社区链接"`
	License       string    `orm:"size(4096);column(license)" description:"license"`
	Feature       string    `orm:"size(128);column(feature)" description:"特性"`
	MainTainer    string    `orm:"size(128);column(main_tainer)" description:"维护人"`
	MainTainLevel int8      `orm:"column(main_tain_level);default(1)" description:"软件包维护级别"`
	GitUrl        string    `orm:"size(512);column(git_url)" description:"gitee上的地址"`
	Summary       string    `orm:"size(1024);column(summary)" description:"summary"`
	Decription    string    `orm:"size(8092);column(decription)" description:"decription"`
	BuildRequired string    `orm:"size(4096);column(build_require)" description:"源码包的编译依赖"`
	Status        int8      `orm:"default(0);column(status)" description:"0: 代表新数据; 1:已推送; 2:代表已废弃"`
	CreateTime    time.Time `orm:"auto_now_add;type(datetime);column(create_time)"`
	UpdateTime    time.Time `orm:"auto_now;type(datetime);column(update_time)"`
	DeleteTime    time.Time `orm:"auto_now;type(datetime);column(delete_time)"`
}

type GitSubPack struct {
	SubId       int64  `orm:"pk;auto;column(sub_id)"`
	DetailId    int64  `orm:"index;column(detail_id)" description:"包id，外键"`
	Ids         int64  `orm:"index;column(ids)" description:"原始数据id来源"`
	SubPackName string `orm:"size(256);column(sub_pack_name)" description:"二进制包名"`
}

type GitSubPackRequire struct {
	RequireId   int64  `orm:"pk;auto;column(require_id)"`
	SubId       int64  `orm:"index;column(sub_id)" description:"包id,外键"`
	Ids         int64  `orm:"index;column(ids)" description:"原始数据id来源"`
	RequireName string `orm:"size(256);column(require_name)" description:"二进制包名"`
	Providedby  string `orm:"size(4096);column(providedb)" description:"提供该组件的二进制包"`
}

type GitSubPackProvides struct {
	ProvideId   int64  `orm:"pk;auto;column(provide_id)"`
	SubId       int64  `orm:"index;column(sub_id)" description:"包id，外键"`
	Ids         int64  `orm:"index;column(ids)" description:"原始数据id来源"`
	ProvideName string `orm:"size(256);column(provide_name)" description:"依赖的组件名称"`
	Requiredby  string `orm:"size(256);column(requiredb)" description:"依赖该组件的二进制包列表"`
}

type GitSubPackRequiredby struct {
	Id         int64  `orm:"pk;auto;column(id)"`
	ProvideId  int64  `orm:"index;column(provide_id)" description:" 包id，外键"`
	Requiredby string `orm:"size(256);column(requiredb)" description:"依赖该组件的二进制包列表"`
}

type OriginUpstream struct {
	CveId         int64  `orm:"pk;auto;column(cve_id)"`
	Ids           string `orm:"size(256);column(cve_un_ids);unique" description:" 唯一编号,根据此字段去重数据, 唯一识别码，可以填cve编号"`
	CveNum        string `orm:"size(256);column(cve_num);index" description:"cve编号"`
	UpdateType    string `orm:"size(32);column(update_type);" description:"数据上传类型：insert, update, delete"`
	CvePackName   string `orm:"size(512);column(cve_packname);index;null" description:"Cve在上游对应的包名"`
	PackName      string `orm:"size(512);column(git_packname);index;null" description:"Cve对应的openEuler包名称(或者影响的包名)"`
	Title         string `orm:"size(1024);column(cve_title);null" description:"标题"`
	AffectProduct string `orm:"size(512);column(affect_porduct);null" description:"Cve影响的组件, 对应"`
	CnnvdID       string `orm:"size(256);column(cnnvd_id);null" description:"Cnnvd_id"`
	CnvdID        string `orm:"size(256);column(cnvd_id);null" description:"Cnvd_id"`
	PublishedDate string `orm:"size(32);column(published_date);null" description:"漏洞发布日期"`
	VulStatus     string `orm:"size(64);column(vul_status);null" description:"漏洞状态，REJECT, DISPUTED"`
	Status        int8   `orm:"default(0);column(cve_status)" description:"0:cve新增;1:数据已变化；2：数据已处理"`
	AffectedScope string `orm:"size(512);column(affected_scope);null" description:"影响范围推理"`
	Version       string `orm:"size(64);column(version);index" description:"包对应的版本号"`
	AttackLink    string `orm:"size(512);column(attack_link);null" description:"攻击链路推理"`
	IsExit        int8   `orm:"default(1);column(is_exit)" description:"1: 当前包对应在src-openEuler有对应仓库; 0: 无;2:临时值"`
	CreateTime    string `orm:"size(32);column(create_time)"`
	UpdateTime    string `orm:"size(32);column(update_time);null"`
	DeleteTime    string `orm:"size(32);column(delete_time);null"`
}

type OriginUpstreamDesc struct {
	DescId        int64  `orm:"pk;auto;column(desc_id)"`
	CveId         int64  `orm:"index;column(cve_id)" description:"OriginUpstream 外键"`
	EnDescription string `orm:"size(8192);column(en_desc);null" description:"cve英文描述"`
	ZhDescription string `orm:"size(8192);column(zh_desc);null" description:"cve中文描述"`
}

type OriginUpstreamConfig struct {
	ConfId int64  `orm:"pk;auto;column(conf_id)"`
	CveId  int64  `orm:"index;column(cve_id)" description:"OriginUpstream 外键"`
	Nodes  string `orm:"size(32);column(nodes);null" description:"nodes数组"`
}

type OriginUpstreamConfigNode struct {
	NodeId   int64  `orm:"pk;auto;column(node_id)"`
	ConfId   int64  `orm:"index;column(conf_id)" description:"OriginUpstreamConfig 外键"`
	Operator string `orm:"size(256);column(operator);null" description:"operator"`
}

type SecurityReviewer struct {
	Id        int64  `orm:"pk;auto"`
	NameSpace string `orm:"unique" description:"码云空间地址"`
}

type OriginUpstreamConfigNodeCpe struct {
	CpeId          int64  `orm:"pk;auto;column(cpe_id)"`
	NodeId         int64  `orm:"index;column(node_id)" description:"OriginUpstreamConfigNode 外键"`
	Cpe23Uri       string `orm:"size(1024);column(cpe_uri);null" description:"cpe"`
	CpeMatchString string `orm:"size(1024);column(cpe_match);null" description:"过滤字符串"`
	Vulnerable     string `orm:"size(64);column(vulner_able);null" description:"易受攻击"`
}

type OriginUpstreamImpact struct {
	ImpactId int64  `orm:"pk;auto;column(impact_id)"`
	CveId    int64  `orm:"index;column(cve_id)" description:"OriginUpstream 外键"`
	Impact   string `orm:"size(32);column(impact);null" description:"包含v2,v3评分数据"`
}

type OriginUpstreamImpactScore struct {
	ScoreId      int64 `orm:"pk;auto;column(score_id)"`
	ImpactId     int64 `orm:"index;column(impact_id)" description:"OriginUpstreamImpact 外键"`
	BaseMetricV3 int8  `orm:"column(base_met_v3);null" description:"v3评分存在为：1; 0:不存在"`
	BaseMetricV2 int8  `orm:"column(base_met_v2);null" description:"v2评分存在为：1; 0:不存在"`
	CvssV3       int8  `orm:"column(cvss_v3);null" description:"v3评分存在为：1; 0:不存在"`
	CvssV2       int8  `orm:"column(cvss_v2);null" description:"v2评分存在为：1; 0:不存在"`
	Status       int8  `orm:"default(1);column(score_status);null" description:"1:未处理；2：已处理；3：已修改"`
}

type OriginUpstreamImpactScoreV3 struct {
	V3Id                  int64   `orm:"pk;auto;column(v3_id)"`
	ScoreId               int64   `orm:"index;column(score_id)" description:"OriginUpstreamImpactScore 外键"`
	BaseScore             float64 `orm:"digits(10);decimals(1);column(base_score);null" description:"nvd 基准分"`
	VectorString          string  `orm:"size(256);column(vector_value);null" description:"nvd vector 评分向量值"`
	AttackComplexity      string  `orm:"size(64);column(attack_complexity);null" description:"攻击复杂性"`
	AttackVector          string  `orm:"size(64);column(attack_vector);null" description:"攻击目标"`
	AvailabilityImpact    string  `orm:"size(64);column(availability_impact);null" description:"可用性影响"`
	BaseSeverity          string  `orm:"size(64);column(base_severity);null" description:"严重程度"`
	UserInteraction       string  `orm:"size(64);column(user_interaction);null" description:"用户交互"`
	PrivilegesRequired    string  `orm:"size(64);column(privilege_required);null" description:"所需特权"`
	Version               string  `orm:"size(64);column(version);null" description:"Cvss版本"`
	ConfidentialityImpact string  `orm:"size(64);column(confidentiality_impact);null" description:"可信性影响"`
	IntegrityImpact       string  `orm:"size(64);column(integrity_impact);null" description:"完整性影响"`
	Scope                 string  `orm:"size(64);column(scope);null" description:"范围"`
	ImpactScore           float64 `orm:"digits(10);decimals(1);column(impact_score);null" description:"nvd 影响评分"`
	ExploitabilityScore   float64 `orm:"digits(10);decimals(1);column(exploitability_score);null" description:"nvd 可利用性评分"`
	CveLevel              string  `orm:"size(32);column(cve_level);null" description:"致命(Critical) >= 9.0;严重(High)>=7.0&&<=8.9;中等(Medium)>4.0 && <=6.9;一般(Low)<=4.0;其他"`
}

type OriginUpstreamImpactScoreV2 struct {
	V2Id                    int64   `orm:"pk;auto;column(v2_id)"`
	ScoreId                 int64   `orm:"index;column(score_id)" description:"OriginUpstreamImpactScore 外键"`
	AcInsufInfo             string  `orm:"size(64);column(acinsuf_info);null" description:"nvd vector 原始值"`
	BaseScore               float64 `orm:"digits(10);decimals(1);column(base_score);null" description:"nvd 基准分"`
	VectorString            string  `orm:"size(256);column(vector_value);null" description:"nvd vector 评分向量值"`
	AccessComplexity        string  `orm:"size(64);column(access_complexity);null" description:"攻击复杂性"`
	Authentication          string  `orm:"size(64);column(authentication);null" description:"身份认证"`
	AvailabilityImpact      string  `orm:"size(64);column(availability_impact);null" description:"可用性影响"`
	Version                 string  `orm:"size(64);column(version);null" description:"Cvss版本"`
	ConfidentialityImpact   string  `orm:"size(64);column(confidentiality_impact);null" description:"可信性影响"`
	IntegrityImpact         string  `orm:"size(64);column(integrity_impact);null" description:"完整性影响"`
	AccessVector            string  `orm:"size(64);column(access_vector);null" description:"攻击目标"`
	UserInteractionRequired string  `orm:"size(64);column(user_interaction_required);null" description:"需要用户交互"`
	Severity                string  `orm:"size(64);column(severity);null" description:"严重程度"`
	ObtainUserPrivilege     string  `orm:"size(64);column(obtain_user_privilege);null" description:"获取用户特权"`
	ObtainAllPrivilege      string  `orm:"size(64);column(obtain_all_privilege);null" description:"获取所有特权"`
	ObtainOtherPrivilege    string  `orm:"size(64);column(obtain_other_privilege);null" description:"获取其他特权"`
	ImpactScore             float64 `orm:"digits(10);decimals(1);column(impact_score);null" description:"nvd 影响评分"`
	ExploitabilityScore     float64 `orm:"digits(10);decimals(1);column(exploitability_score);null" description:"nvd 可利用性评分"`
	CveLevel                string  `orm:"size(32);column(cve_level);null" description:"致命(Critical) >= 9.0;严重(High)>=7.0&&<=8.9;中等(Medium)>4.0 && <=6.9;一般(Low)<=4.0;其他"`
}

type OriginUpstreamPoc struct {
	PocId   int64  `orm:"pk;auto;column(poc_id)"`
	CveId   int64  `orm:"index;column(cve_id)" description:"OriginUpstream 外键"`
	Source  string `orm:"size(512);column(source);null" description:"来源"`
	Date    string `orm:"size(32);column(date);null" description:"日期"`
	Path    string `orm:"size(512);column(path);null" description:"文件路径"`
	Dbindex string `orm:"size(512);column(dbindex);null" description:"数据库索引"`
	Url     string `orm:"size(512);column(url);null" description:"下载链接"`
	Desc    string `orm:"size(2048);column(desc);null" description:"说明"`
}

type OriginUpstreamEvent struct {
	EventId     int64  `orm:"pk;auto;column(event_id)"`
	CveId       int64  `orm:"index;column(cve_id)" description:"OriginUpstream 外键"`
	Title       string `orm:"size(512);column(title);null" description:"标题"`
	Date        string `orm:"size(32);column(date);null" description:"日期"`
	Url         string `orm:"size(512);column(url);null" description:"连接"`
	Description string `orm:"size(2048);column(description);null" description:"说明"`
}

type OriginUpstreamReference struct {
	RefId     int64  `orm:"pk;auto;column(ref_id)"`
	CveId     int64  `orm:"index;column(cve_id)" description:"OriginUpstream 外键"`
	Name      string `orm:"size(512);column(name);null" description:"名称"`
	Refsource string `orm:"size(512);column(refsource);null" description:"参考来源"`
	Url       string `orm:"size(512);column(url);null" description:"链接"`
	Tags      string `orm:"size(2048);column(tags);null" description:"tags"`
}

type OriginUpstreamVulType struct {
	VulId  int64  `orm:"pk;auto;column(vul_id)"`
	CveId  int64  `orm:"index;column(cve_id)" description:"OriginUpstream 外键"`
	Cwe    string `orm:"size(256);column(cwe);null" description:"Cwe编号"`
	EnDesc string `orm:"size(2048);column(en_desc);null" description:"英文描述"`
	ZhDesc string `orm:"size(2048);column(zh_desc);null" description:"中文描述"`
}

type OriginUpstreamFixSuggest struct {
	FixId  int64  `orm:"pk;auto;column(fix_id)"`
	CveId  int64  `orm:"index;column(cve_id)" description:"OriginUpstream 外键"`
	Detail string `orm:"size(1024);column(detail);null" description:"细节"`
}

type OriginUpstreamFixSuggestRef struct {
	FixRefId  int64  `orm:"pk;auto;column(fix_ref_id)"`
	FixId     int64  `orm:"index;column(fix_id)" description:"OriginUpstreamFixSuggest 外键"`
	Refsource string `orm:"size(512);column(refsource);null" description:"参考文献，包含以下内容"`
	Url       string `orm:"size(1024);column(url);null" description:"链接"`
	Name      string `orm:"size(1024);column(name);null" description:"名称"`
}

//GiteOriginIssue 码云上已经存在的issue
type GiteOriginIssue struct {
	Id            int64     `orm:"pk;auto"`
	IssueId       int64     `json:"issue_id" orm:"unique"`
	Url           string    ` description:"issue gitee 链接"`
	Number        string    `orm:"size(50);unique" description:"issue 编号"`
	State         string    `orm:"size(50)" description:"issue 状态"`
	Title         string    `orm:"null" description:"issue 标题"`
	CveNumber     string    `json:"cve_number" description:"CVE 编号"`
	Body          string    `orm:"null;type(text)" description:"issue 主体"`
	IssueCreate   string    `json:"issue_create" description:"issue 创建者"`
	IssueAssignee string    `json:"issue_assignee" orm:"null" description:"issue 责任人"`
	RepoPath      string    `json:"repo_path" description:"仓库空间地址"`
	RepoUrl       string    `json:"repo_url" description:"仓库码云地址链接"`
	IssueType     string    `json:"issue_type" description:"issue 类型"`
	IssueExistTpl bool      `json:"issue_exist_tpl" description:"此 issue 是否有对应的模板"`
	SecurityHole  bool      `json:"security_hole" description:"是否为安全漏洞"`
	Status        int8      `orm:"default(0);column(proc_status)" description:"0:cve新增;1:数据已变化；2：数据已处理"`
	IssueCreateAt time.Time `json:"issue_create_at" orm:"null" description:"issue 创建的时间"`
	IssueUpdateAt time.Time `json:"issue_update_at" orm:"null" description:"issue 更新的时间"`
	IssueFinishAt time.Time `json:"issue_finish_at" orm:"null" description:"issue 关闭的时间"`
	GrabTime      time.Time `json:"grab_time" orm:"auto_now;type(datetime)" description:"记录当前issue抓取的时间"`
	InfProduct    string    `json:"inf_product" orm:"null" description:"受影响的产品"` //受影响的产品
	RepoDesc      string    `json:"repo_desc" orm:"null;size(2048)" description:"cve 对组件的描述"`
}

type OriginUpstreamFixSuggestRefTag struct {
	TagId    int64  `orm:"pk;auto;column(tag_id)"`
	FixRefId int64  `orm:"index;column(fix_ref_id)" description:"OriginUpstreamFixSuggestRef 外键"`
	Name     string `orm:"size(512);column(name);null" description:"名称"`
}

type OriginExcel struct {
	CveId             int64   `orm:"pk;auto;column(cve_id)"`
	CveNum            string  `orm:"size(256);column(cve_num)" description:"cve编号"`
	CveUrl            string  `orm:"size(2048);column(cve_url);null" description:"cve下载链接"`
	CveVersion        string  `orm:"size(256);column(cve_version);null" description:"漏洞归属版本"`
	PackName          string  `orm:"size(128);column(pack_name);null" description:"包名"`
	ScoreType         string  `orm:"size(16);column(score_type);null" description:"评分类型：v3"`
	NVDScore          float64 `orm:"digits(10);decimals(1);column(nvd_score);null" description:"nvd评分"`
	CveLevel          string  `orm:"size(32);column(cve_level);null" description:"致命(Critical);严重(High);中等(Medium);一般(Low);其他"`
	CveDesc           string  `orm:"size(4096);column(cve_desc);null" description:"漏洞简述"`
	RepairTime        string  `orm:"size(32);column(repair_time);null" description:"cve发布时间"`
	NVDVector         string  `orm:"size(256);column(vector_value);null" description:"nvd 评分向量"`
	AttackVector      string  `orm:"size(256);column(attack_vector);null" description:"nvd 3.0评分"`
	AccessVector      string  `orm:"size(256);column(access_vector);null" description:"nvd 2.0 评分"`
	AttackComplexity  string  `orm:"size(64);column(attack_complexity);null"`
	AccessComplexity  string  `orm:"size(64);column(access_complexity);null"`
	PrivilegeRequired string  `orm:"size(64);column(privilege_required);null"`
	UserInteraction   string  `orm:"size(64);column(user_interaction);null"`
	Scope             string  `orm:"size(64);column(scope);null"`
	Confidentiality   string  `orm:"size(64);column(confidentiality);null"`
	Integrity         string  `orm:"size(64);column(integrity);null"`
	Availability      string  `orm:"size(64);column(availability);null"`
	Authentication    string  `orm:"size(64);column(authentication);null"`
	CveStatus         int8    `orm:"default(0);column(cve_status);null" description:"0:未处理;1:已修改；2：已处理; 3: 数据错误，不做处理"`
	CreateTime        string  `orm:"type(datetime);column(create_time);null"`
	UpdateTime        string  `orm:"type(datetime);column(update_time);null"`
	DeleteTime        string  `orm:"type(datetime);column(delete_time);null"`
}

type GitRepoGroups struct {
	GroupId   int64  `orm:"pk;auto;column(group_id)"`
	GroupName string `orm:"index"`
}

//GiteRepo 码云仓库
type GiteRepo struct {
	RepoId     int64 `orm:"pk;auto;column(repo_id)"`
	GroupId    int64 `orm:"index;column(group_id)" description:"GitRepoGroups 外键"`
	OrgId      int64
	OrgPath    string `orm:"size(128);column(org_path);null" description:"组织名称"`
	Path       string `orm:"size(512);column(path);null" description:"仓库名称"`
	Status     int8   `orm:"default(0);column(status);null" description:"1: 正常;2:已删除"`
	Public     bool
	Private    bool
	Fork       bool
	CreateTime string `orm:"type(datetime);column(create_time);null"`
	UpdateTime string `orm:"type(datetime);column(update_time);null"`
	DeleteTime string `orm:"type(datetime);column(delete_time);null"`
}

//GiteMember 码云仓库成员
type GiteRepoMember struct {
	MemBerId   int64  `orm:"pk;auto;column(repo_id)"`
	GroupId    int64  `orm:"index;column(group_id)" description:"GitRepoGroups 外键"`
	MemberName string `orm:"size(512);column(member_name);null" description:"成员名称"`
	MemberType string `orm:"size(128);column(member_type);null" description:"Maintainer;Committer"`
	CreateTime string `orm:"type(datetime);column(create_time);null"`
	UpdateTime string `orm:"type(datetime);column(update_time);null"`
	DeleteTime string `orm:"type(datetime);column(delete_time);null"`
}

//GiteRepoBranch 码云仓库分支
type GiteRepoBranch struct {
	Id            int64 `orm:"pk;auto"`
	RepoId        int64 `orm:"index;column(repo_id)" description:"GiteRepo 外键"`
	ProtectionUrl string
	Name          string
	Protected     string
}

type ExportRecord struct {
	Id         int64     `orm:"pk;auto"`
	FileName   string    `orm:"unique"`
	CreateTime time.Time `orm:"auto_now_add;type(datetime);column(create_time)"`
}

func CreateDb() bool {
	BConfig, err := config.NewConfig("ini", "conf/app.conf")
	if err != nil {
		logs.Error("config init error:", err)
		return false
	}
	prefix := BConfig.String("mysql::dbprefix")
	InitdbType, _ := beego.AppConfig.Int("initdb")
	if InitdbType == 1 {
		orm.RegisterModelWithPrefix(prefix, new(OtherUser), new(AdminUser), new(VulnCenter),
			new(OpenEulerSA), new(Score), new(SecurityNotice), new(Package),
			new(IssueTemplate), new(ScoreRecord), new(IssueHooks),
			new(GitPackageTable), new(GitOpenEuler), new(GitPackageInfo), new(GitSubPack), new(GitOpenEulerTableRelate),
			new(SecurityReviewer), new(GitSubPackRequire), new(GitSubPackProvides), new(GitSubPackRequiredby),
			new(IpWhite), new(OriginUpstream), new(OriginUpstreamDesc),
			new(OriginUpstreamConfig), new(OriginUpstreamConfigNode),
			new(OriginUpstreamConfigNodeCpe), new(OriginUpstreamImpact), new(OriginUpstreamImpactScore),
			new(OriginUpstreamImpactScoreV3), new(OriginUpstreamImpactScoreV2),
			new(OriginUpstreamPoc), new(OriginUpstreamEvent), new(OriginUpstreamReference), new(OriginUpstreamVulType),
			new(OriginUpstreamFixSuggest), new(OriginUpstreamFixSuggestRefTag),
			new(OriginUpstreamFixSuggestRef), new(GiteOriginIssue), new(OriginExcel), new(ExportRecord), new(GitRepoGroups),
			new(GiteRepo), new(GiteRepoMember), new(GiteRepoBranch),
		)
		logs.Info("table create success!")
		errosyn := orm.RunSyncdb("default", false, true)
		if errosyn != nil {
			logs.Error(errosyn)
		}
	}
	return true
}
