package controllers

import (
	"cvevulner/errcode"
	"encoding/json"
	"github.com/astaxie/beego"
	"github.com/astaxie/beego/logs"
)

type IssueOathCallbackController struct {
	beego.Controller
}


func (c *IssueOathCallbackController) RetData(resp map[string]interface{}) {
	c.Data["json"] =resp
	c.ServeJSON()
}

// @Title UserLogin
// @Description UserLogin
// @Param	body		body 	models.User	true		"body for user content"
// @Success 200 {int} models.User.ID
// @Failure 403 body is empty
// @router / [post]
func (c *IssueOathCallbackController) Post() {
	req := make(map[string]interface{})
	resp := make(map[string]interface{})
	resp["errno"]=errcode.RecodeLoginErr
	resp["errmsg"]=errcode.RecodeText(errcode.RecodeLoginErr)
	resp["body"] = Result{}
	defer c.RetData(resp)
	json.Unmarshal(c.Ctx.Input.RequestBody,&req)
	logs.Info("登录请求参数：", &req)
	//判断是否合法
	//if req["UserName"] == nil || req["PassWord"] ==nil{
	//	resp["errno"]=errcode.RECODE_DATAERR
	//	resp["errmsg"]=errcode.RecodeText(errcode.RECODE_DATAERR)
	//	resp["body"] = Result{}
	//	logs.Error("数据错误")
	//	return
	//}
	//password := fmt.Sprintf("%s", req["PassWord"])
	//// 加密先注释
	////password = common.DesString(password)
	//if password == "" || len(password) == 0{
	//	resp["errno"]=errcode.RECODE_PWDERR
	//	resp["errmsg"]=errcode.RecodeText(errcode.RECODE_PWDERR)
	//	logs.Error("密码解析错误", password)
	//	resp["body"] = Result{}
	//	return
	//}
	//var strc Result
	//username := fmt.Sprintf("%s", req["UserName"])
	//resp_model, err := models.GetCveUserByUser(username, password)
	//logs.Info(resp_model)
	//if resp_model!= nil && err == nil {
	//	token,terr := common.GenToken(username, password)
	//	if terr == nil {
	//		strc.Key = token
	//		logs.Info(resp_model[0]["user_id"])
	//		user_id := resp_model[0]["user_id"]
	//		strc.UserId = user_id
	//		resp["body"] = strc
	//		resp["errno"]=errcode.RECODE_OK
	//		resp["errmsg"]=errcode.RecodeText(errcode.RECODE_OK)
	//		models.UpdateToken(resp_model[0]["user_id"], token)
	//		return
	//	}
	//}
	return
}

