#!/usr/bin/python3
# ******************************************************************************
# Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
# licensed under the Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#     http://license.coscl.org.cn/MulanPSL2
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR
# PURPOSE.
# See the Mulan PSL v2 for more details.
# ******************************************************************************/
import json
from json import JSONDecodeError

from constant import Constant
from core.platform.cve_platform import CvePlatform
from logger import logger


class Bugzilla(CvePlatform):
    """
    cve refer to the URL bugzilla to find the patch implementation class
    """

    def __init__(self, cve_num, base_url=Constant.BUGZILLA_BASE_URL):
        super(Bugzilla, self).__init__(cve_num, base_url)

    @property
    def crawler_url(self):
        """
        override url splicing method
        :return: url
        """
        return self.base_url.format(cve_num=self.cve_num)

    @staticmethod
    def format_text(text):
        """
        Rewrite the formatted web page to get the content method
        :param text: content of web page
        :return: formatted content
        """
        try:
            text_dict = json.loads(text)
            return json.dumps(text_dict, indent=4)
        except JSONDecodeError as e:
            logger.error(f'The format of the content obtained by bugzilla website is incorrect, '
                         f'content is {text}, message is {e.msg}')
            return None
