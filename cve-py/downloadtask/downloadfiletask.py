#!/usr/bin/python
# -*- coding: UTF-8 -*-

################################################################################
#
# Copyright (c) 2020 openEuler.org, Inc. All Rights Reserved
#
################################################################################
"""
Data update provides download tasks

Authors: xiaojianghui
Date:    10/22/2020 11:01 AM
"""

import requests
import lxml.etree as etree
import shutil
import os


def handle_one():
    """
        download file
    """
    if os.listdir("../newexcels"):
        shutil.rmtree("../newexcels")
        os.mkdir("../newexcels")
    url = 'https://gitee.com/iamxjh/test/tree/master/testfile/chirdfile'
    try:
        r = requests.get(url)
    except requests.exceptions.ConnectionError:
        print('ConnectionError')
        return
    except requests.exceptions.ChunkedEncodingError:
        print('ChunkedEncodingError')
        return
    html = etree.HTML(r.content)
    if html:
        i = 3
        while True:
            try:
                name = html.xpath("//div[@id='tree-slider']/div[{}]/div[1]/a/@title".format(i))[0]
            except IndexError:
                break
            if name.endswith(".xls") or name.endswith(".xlsx"):
                url = "https://gitee.com/iamxjh/test/raw/master/testfile/chirdfile/" + name
                r = requests.get(url)
                print(r.status_code)
                with open("../newexcels/" + name, 'wb') as code:
                    code.write(r.content)
            i += 2


def handle_two():
    """
        download file
    """
    if os.listdir("../mappingexcels"):
        shutil.rmtree("../mappingexcels")
        os.mkdir("../mappingexcels")
    url = 'https://gitee.com/iamxjh/test/tree/master/testfile/chirdfile'
    try:
        r = requests.get(url)
    except requests.exceptions.ConnectionError:
        print('ConnectionError')
        return
    except requests.exceptions.ChunkedEncodingError:
        print('ChunkedEncodingError')
        return
    html = etree.HTML(r.content)
    if html:
        i = 3
        while True:
            try:
                name = html.xpath("//div[@id='tree-slider']/div[{}]/div[1]/a/@title".format(i))[0]
            except IndexError:
                break
            if name.endswith(".xls") or name.endswith(".xlsx"):
                url = "https://gitee.com/iamxjh/test/raw/master/testfile/chirdfile/" + name
                r = requests.get(url)
                print(r.status_code)
                with open("../mappingexcels/" + name, 'wb') as code:
                    code.write(r.content)
            i += 2
