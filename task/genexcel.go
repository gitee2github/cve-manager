package task

import (
	"cvevulner/common"
	"cvevulner/taskhandler"
	"errors"
	"github.com/astaxie/beego/config"
	"github.com/astaxie/beego/logs"
)

//GenExcelData generate excel data
func GenExcelData()  error{
	defer common.Catchs()
	logs.Info("执行issue生成excel task start")
	// 查询需要处理的cve, 1:新增；2：修改
	BConfig, err := config.NewConfig("ini", "conf/app.conf")
	if err != nil{
		logs.Error("config init error:", err)
		return err
	}
	forceRewrite, err := BConfig.Bool("excel::forcerewrite")
	if err != nil{
		logs.Error("config excel::forcerewrite error: invalid value is ", forceRewrite)
		return errors.New("value is nil")
	}
	snPrefix := BConfig.String("excel::snprefix")
	if snPrefix == "" {
		logs.Error("config excel::snprefix error: invalid value is ", snPrefix)
		return errors.New("value is nil")
	}
	snSuffix, err := BConfig.Int64("excel::snsuffix")
	if snSuffix == 0 || err != nil {
		logs.Error("config excel::snsuffix error: invalid value is ", snSuffix)
		return errors.New("value is nil")
	}
	//excelName := "openEuler." + common.GetCurDate() + ".xlsx"
	//errx := taskhandler.GenerateCveExcel(excelName, snPrefix, snSuffix, forceRewrite)
	errx := taskhandler.GenerateExcelTask()
	logs.Info("执行issue生成excel task end")
	return errx
}