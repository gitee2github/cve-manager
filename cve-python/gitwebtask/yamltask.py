# -*- coding: UTF-8 -*-
import yaml
import requests
from dbConnecttion.MysqlConn import Mysql
import time
import os
import logging

class task():
    logger = logging.getLogger('log')
    def download(self):
        url="https://gitee.com/openeuler/community/raw/master/sig/sigs.yaml"
        try:
            r=requests.get(url)
        except requests.exceptions.ConnectionError:
            print('ConnectionError')
        except requests.exceptions.ChunkedEncodingError:
            print('ChunkedEncodingError')
        except:
            print('Unfortunitely -- An Unknow Error Happened')
        with open ("sigs.yaml","wb") as code:
            code.write(r.content)
    def read(self):
        mysql=Mysql()
        if os.path.exists("sigs.yaml"):
            with open("sigs.yaml","r") as f:
                data=yaml.load(f)
            print(data)
            for sig in data['sigs']:
                sql="select group_id from cve_git_repo_groups where group_name=%s"
                val=(sig['name'],)
                groupId=mysql.getOne(sql,val)['group_id']
                #根据group_id删除数据避免重复
                sql1="delete from cve_gite_repo where group_id = %s"
                val1=(groupId,)
                mysql.delete(sql1,val1)
                mysql.dispose()
                # print(groupId)
                for p in sig["repositories"]:
                    orgPath=p[0:p.rfind("/")]
                    path=p[p.rfind("/"):][1:]
                    createTime = str(time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()))
                    sql="insert into cve_gite_repo (group_id,org_path,path,status,create_time) values (%s,%s,%s,%s,%s)"
                    val=(groupId,orgPath,path,0,createTime)
                    mysql.insertOne(sql,val)
                    mysql.dispose()
        mysql.close()
