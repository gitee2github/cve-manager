package models

import "time"

type HookUser struct {
	Id        int64
	Login     string //同下username
	Name      string //用户的昵称
	Email     string //用户的邮箱
	UserName  string `json:"username"`   //用户的码云个人空间地址
	AvatarUrl string `json:"avatar_url"` //用户头像
	SiteAdmin bool   `json:"site_admin"` //是不是管理员

}

type HookIssue struct {
	Id           int64
	Number       string
	Title        string
	State        string
	HtmlUrl      string `json:"html_url"` //评论在码云上的url
	Body         string
	StateName    string `json:"state_name"`
	User         HookUser
	Assignee     HookUser
	Repository   HookRepository
	CreateAt     time.Time `json:"created_at"`
	UpdateAt     time.Time `json:"updated_at"`
	FinishedAt   time.Time `json:"finished_at"`
	IssueType    string    `json:"issue_type"`
	SecurityHole bool      `json:"security_hole"`
}

type HookRepository struct {
	Id       int64
	FullName string `json:"full_name"`
	Url      string `json:"url"`
	Path     string
	Name     string
	Owner    HookUser
	Private  bool
	public   bool
}

type HookComment struct {
	User     *HookUser //评论的作者信息
	HtmlUrl  string    `json:"html_url"` //评论在码云上的url
	Id       int64
	Body     string    //评论的内容
	CreateAt time.Time `json:"create_at"`
	UpdateAt time.Time `json:"update_at"`
}

//CommentPayload hook data triggered by a comment task operation
type CommentPayload struct {
	Action        string // 动作 comment
	HookName      string `json:"hook_name"`
	Password      string //钩子的密码
	HookId        int64  `json:"hook_id"`  //钩子ID
	HookUrl       string `json:"hook_url"` //钩子的路由
	Timestamp     string
	Sign          string       //钩子根据密钥计算的签名
	Comment       *HookComment //评论数据
	Note          string       //被评论目标的评论数据
	NoteableType  string       `json:"noteable_type"` //被评论的目标类型
	NoteableId    int64        `json:"noteable_id"`   //被评论的目标ID
	Title         string       //被评论的目标标题
	PerId         string       `json:"per_iid"`         //被评论的目标标识
	ShortCommitId string       `json:"short_commit_id"` //被评论的commit提交中的简短sha
	Issue         *HookIssue
}

type IssuePayload struct {
	HookId      int64     `json:"hook_id"`   //  钩子 id。
	HookUrl     string    `json:"hook_url"`  // 钩子路由。
	HookName    string    `json:"hook_name"` // 钩子名，固定为 issue_hooks。
	Password    string    `json:"password"`  // 钩子密码
	Action      string    //issue 状态
	Issue       HookIssue //issue 信息
	Sender      HookUser  //触发 hook 的用户信息。
	TargetUser  HookUser  `json:"target_user"` //被委托处理 issue 的用户信息
	User        HookUser  //issue 的创建者
	Assignee    HookUser  //issue 的负责人
	Iid         string    //issue 的标识
	Title       string    //issue 的标题
	Description string    //issue 的描述
	State       string    //issue 的状态
	Url         string    //issue 在码云上的url
}
