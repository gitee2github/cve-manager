package task

import (
	"cvevulner/common"
	"cvevulner/taskhandler"
	"errors"
	"github.com/astaxie/beego"
	"github.com/astaxie/beego/logs"
	"os"
)

// Verify whether the issue on gitee has been deleted

func CheckIssueIsExist() error {
	defer common.Catchs()
	prnum, prErr := beego.AppConfig.Int("crontab::prcnum")
	if prErr != nil {
		prnum = 100
	}
	owner := beego.AppConfig.String("gitee::owner")
	accessToken := os.Getenv("GITEE_TOKEN")
	if accessToken == "" || len(accessToken) < 1 {
		logs.Error("CheckIssueIsExist, issue token Get failed, current time: ", common.GetCurTime())
		return errors.New("Failed to get token in environment variable")
	}
	gaussOwner := beego.AppConfig.String("opengauss::gauss_owner")
	gitGaussToken := beego.AppConfig.String("opengauss::git_gauss_token")
	// Get the data source of the table
	err := taskhandler.ProcIssueIsExists(prnum, owner, gaussOwner, accessToken, gitGaussToken)
	logs.Info(err)
	return err
}
