package taskhandler

import (
	"encoding/json"
	"fmt"
	"github.com/astaxie/beego/logs"
	"io/ioutil"
	"net/http"
	"sync"
)

const (
	GiteOrgInfoUrl    = `https://gitee.com/api/v5/orgs/%v?access_token=%v` //get gitee org info
	GiteOrgReposUrl   = `https://gitee.com/api/v5/orgs/%v/repos?access_token=%v&type=all&page=%v&per_page=%v`//get all repository
	GiteRepoIssuesUrl = `https://gitee.com/api/v5/repos/{owner}/{repo}/issues`
	perPage =50
)

var wg sync.WaitGroup

type OrgInfo struct {
	Id           int32  `json:"id,omitempty"`
	Login        string `json:"login,omitempty"`
	Url          string `json:"url,omitempty"`
	AvatarUrl    string `json:"avatar_url,omitempty"`
	ReposUrl     string `json:"repos_url,omitempty"`
	EventsUrl    string `json:"events_url,omitempty"`
	MembersUrl   string `json:"members_url,omitempty"`
	Description  string `json:"description,omitempty"`
	Name         string `json:"name,omitempty"`
	Enterprise   string `json:"enterprise,omitempty"`
	Members      int64  `json:"members,omitempty"`
	PublicRepos  int64  `json:"public_repos,omitempty"`
	PrivateRepos int64  `json:"private_repos,omitempty"`
}

//GrabIssueByOrg grab issue by org name
func GrabIssueByOrg(accToken, org string) {
	orgInfo, err := GetOrgInfo(accToken, org)
	if err != nil {
		logs.Error(err)
		return
	}
	reposNum := orgInfo.PublicRepos + orgInfo.PrivateRepos
	if reposNum <= 0 {
		logs.Info(fmt.Sprintf("%v cantain %v repository,grab issue finish!",org,reposNum))
		return
	}
	pageSize := reposNum / int64(perPage)
	if reposNum%int64(perPage) > 0 {
		pageSize = pageSize + 1
	}
	var i int64
	for i = 1; i <= pageSize; i++ {
      wg.Add(1)
      //load org repository list
	}
	wg.Wait()
}

//GrabIssueByRepo grab issue by repository
func GrabIssueByRepo(accToken, owner, repo, state string, page int) {

}

func GetOrgInfo(accToken, org string) (OrgInfo, error) {
	oi := OrgInfo{}
	resp, err := http.Get(fmt.Sprintf(GiteOrgInfoUrl, org, accToken))
	if err != nil {
		return oi, err
	}
	defer resp.Body.Close()
	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		return oi, err
	}
	err = json.Unmarshal(body, &oi)
	return oi, err
}

func GetOrgRepos(accToken,org string) {

}
